package nEnLinea;

import java.util.ArrayList;

import org.zkoss.zul.*;
import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.Executions;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;

public class IndexController extends BaseController{
	
	private Textbox namePlayer1;
	private Textbox namePlayer2;
	private Intbox numbSqrts;
	private Div board;
	private Div player1Info;
	private Div player2Info;
	private ArrayList player1Moves;
	private ArrayList player2Moves;
	private boolean playerOnePlay;
	
	
	private String colorPlayer1 = "blue";
	private String colorPlayer2 = "red";
	
	@Override
	public void doAfterCompose(Component comp) throws Exception{
		super.doAfterCompose(comp);
	}

	public void onClick$formButton(){
		if(namePlayer1.getValue().length()>1 && namePlayer2.getValue().length()>1 && numbSqrts.getValue() >1 && numbSqrts.getValue()<100){
			String name1 = namePlayer1.getValue();
			String name2 = namePlayer2.getValue();
			int n = numbSqrts.getValue();
			System.out.println(name1);
			System.out.println(name2);
			System.out.println(n);
			
			Label lbl;
			lbl = new Label();
			lbl.setValue(name1);
			lbl.setSclass("name-style ns1");
			lbl.setParent(player1Info);
			
			Label lbl2;
			lbl2 = new Label();
			lbl2.setValue(name2);
			lbl2.setSclass("name-style ns2");
			lbl2.setParent(player2Info);
			
			int j=1;
			int k =1;
			int percent = (int)(100/n);
			String styleBoard = "";
			for(int i=1; i<=n*n; i++){
				j = (int) Math.ceil((float)i/(float)n);
				k = i-n*(j-1);
				System.out.println("r"+k+"-"+"c"+j);
				if(i<=n){
					styleBoard += " "+percent+"%";
				}

				Div item;
				item = new Div();
				item.setClass("square-board");
				item.setId("r"+k+"-"+"c"+j);
				item.setParent(board);
				/*Button button;
				button = new Button();
				button.setClass("square-board-button");
				button.setId("r"+k+"-"+"c"+j);
				button.setParent(item);
				*/
				item.addEventListener("onClick", new EventListener(){
					@Override
					public void onEvent(Event arg0) throws Exception {
						if(playerOnePlay){
							player1Moves.add(item.getId());
							playerOnePlay =false;
							Label lbl = new Label();
							lbl.setValue("x");
							lbl.setSclass("chooseBlue choose");
							lbl.setParent(item);
						}else{
							player2Moves.add(item.getId());
							playerOnePlay = true;
							Label lbl = new Label();
							lbl.setValue("o");
							lbl.setSclass("chooseRed choose");
							lbl.setParent(item);
						}
						
					     System.out.println("The onClick event is fired" + item.getId());
					}
							
				});
			}
			
			board.setStyle("grid-template-columns:"+styleBoard+"; "+"grid-template-rows:"+styleBoard+";");

			
		}else{
			alert("parametros invalidos,\n"
					+ "los nombre de los jugadores deben tener al menos 2 letras\n"
					+" El número de casillas debe ser mayor a uno y menor a 100 ");
		}
		
	}
	

}
